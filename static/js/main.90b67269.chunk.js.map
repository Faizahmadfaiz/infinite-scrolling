{"version":3,"sources":["auth/fakeAuth.ts","auth/useAuthProvider.ts","auth/AuthProvider.tsx","auth/useAuth.ts","NavComponent.tsx","auth/PrivateRoute.tsx","pages/HomePage.tsx","customHooks.ts","pages/PublicPage.tsx","pages/LoginPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fakeAuth","signIn","cb","setTimeout","signOut","useAuthProvider","useState","user","setUser","AuthContext","createContext","AuthProvider","children","auth","Provider","value","useAuth","useContext","NavComponent","history","useHistory","console","log","Button","onClick","push","PrivateRoute","rest","render","location","to","pathname","state","from","Home","payload","dispatch","useReducer","action","type","images","concat","fetching","imgData","imgDispatch","page","pager","pagerDispatch","bottomBoundaryRef","useRef","useEffect","fetch","then","data","json","catch","e","imgSelector","items","imgObserver","useCallback","node","intObs","IntersectionObserver","entries","forEach","en","intersectionRatio","currentImg","target","newImgSrc","dataset","src","error","unobserve","observe","imagesRef","current","document","querySelectorAll","img","useLazyLoading","scrollRef","scrollObserver","useInfiniteScroll","className","Container","id","Row","map","image","index","author","download_url","Card","style","width","Img","alt","data-src","variant","Body","Title","Footer","border","ref","PublicPage","LoginPage","useLocation","replace","App","path","HomePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90b67269.chunk.js","sourcesContent":["const fakeAuth = {\n  signIn(cb: () => void) {\n    setTimeout(cb, 100)\n  },\n  signOut(cb: () => void) {\n    setTimeout(cb, 100)\n  },\n}\n\nexport default fakeAuth\n","import { useState } from 'react'\nimport fakeAuth from './fakeAuth'\n\nexport interface IUseAuthProvider {\n  user: null | string\n  signIn: (cb: () => void) => void\n  signOut: (cb: () => void) => void\n}\n\nconst useAuthProvider = (): IUseAuthProvider => {\n  const [user, setUser] = useState<null | string>(null)\n  const signIn = (cb: () => void) => {\n    fakeAuth.signIn(() => {\n      setUser('foo')\n      cb()\n    })\n  }\n  const signOut = (cb: () => void) => {\n    fakeAuth.signOut(() => {\n      setUser(null)\n      cb()\n    })\n  }\n\n  return {\n    user,\n    signIn,\n    signOut,\n  }\n}\n\nexport default useAuthProvider\n","import React, { createContext } from 'react'\nimport useAuthProvider, { IUseAuthProvider } from './useAuthProvider'\n\nexport const AuthContext = createContext<IUseAuthProvider | null>(null)\n\nconst AuthProvider: React.FC = ({ children }) => {\n  const auth = useAuthProvider()\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>\n}\n\nexport default AuthProvider\n","import { useContext } from 'react'\nimport { AuthContext } from './AuthProvider'\n\nconst useAuth = () => useContext(AuthContext)\n\nexport default useAuth\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport Button from 'react-bootstrap/Button'\n// import Nav from 'react-bootstrap/Nav'\nimport useAuth from './auth/useAuth'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface NavComponentProps {}\n\nconst NavComponent: React.FC<NavComponentProps> = () => {\n  const history = useHistory()\n  const auth = useAuth()\n  // const handleSignout = () => {\n  //   auth?.signOut(() => {\n  //     history.push('/')\n  //   })\n  // }\n\n  // const handleLogin = () => {\n  //   auth?.signIn(() => {\n  //     //\n  //   })\n  // }\n  console.log('User: ', auth?.user)\n  // return (\n  //   <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n  //     <Navbar.Brand href=\"/home\">\n  //       Infinite scroll + image lazy loading\n  //     </Navbar.Brand>\n  //     <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  //     <Navbar.Collapse id=\"responsive-navbar-nav\">\n  //       <Nav className=\"mr-auto\">\n  //         <Nav.Link href=\"/\">Landing Page</Nav.Link>\n  //         <Nav.Link href=\"/public-page\">Public Page</Nav.Link>\n  //         <Nav.Link href=\"/private-page\">Private Page</Nav.Link>\n  //       </Nav>\n  //       <Nav>\n  //         {auth?.user ? (\n  //           <Nav.Link onSelect={handleSignout}>Signout</Nav.Link>\n  //         ) : (\n  //           <Nav.Link onSelect={handleLogin}>Login</Nav.Link>\n  //         )}\n  //       </Nav>\n  //     </Navbar.Collapse>\n  //   </Navbar>\n  // )\n  return auth?.user ? (\n    <p>\n      Welcome!{' '}\n      <Button\n        onClick={() => {\n          auth?.signOut(() => history.push('/'))\n        }}\n      >\n        Sign out\n      </Button>\n    </p>\n  ) : (\n    <p>You are not logged in.</p>\n  )\n}\n\nexport default NavComponent\n","import React from 'react'\nimport { Redirect, Route, RouteProps } from 'react-router-dom'\nimport useAuth from './useAuth'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface PrivateRouteProps extends RouteProps {}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children, ...rest }) => {\n  const auth = useAuth()\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth?.user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute\n","/* eslint-disable camelcase */\nimport React, { useReducer, useRef } from 'react'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Card from 'react-bootstrap/Card'\nimport { useFetch, useInfiniteScroll, useLazyLoading } from '../customHooks'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface HomeProps {}\n\nconst Home: React.FC<HomeProps> = () => {\n  const initialImagesState = { images: [], fetching: false }\n\n  type IMAGESACTIONTYPE =\n    | { type: 'STACK_IMAGES'; images: any }\n    | { type: 'FETCHING_IMAGES'; fetching: boolean }\n\n  const initialPageState = { page: 0 }\n\n  type PAGEACTIONTYPE = { type: 'ADVANCE_PAGE' }\n\n  const imgReducer = (\n    state: typeof initialImagesState,\n    action: IMAGESACTIONTYPE\n  ) => {\n    switch (action.type) {\n      case 'STACK_IMAGES':\n        return { ...state, images: state.images.concat(action.images) }\n      case 'FETCHING_IMAGES':\n        return { ...state, fetching: action.fetching }\n      default:\n        return state\n    }\n  }\n\n  const pageReducer = (\n    state: typeof initialPageState,\n    action: PAGEACTIONTYPE\n  ) => {\n    switch (action.type) {\n      case 'ADVANCE_PAGE':\n        return { ...state, page: state.page + 1 }\n      default:\n        return state\n    }\n  }\n\n  const [imgData, imgDispatch] = useReducer(imgReducer, {\n    images: [],\n    fetching: true,\n  })\n  const [pager, pagerDispatch] = useReducer(pageReducer, { page: 0 })\n\n  const bottomBoundaryRef = useRef(null)\n  useFetch(pager, imgDispatch)\n  useLazyLoading('.card-img-top', imgData.images)\n  useInfiniteScroll(bottomBoundaryRef, pagerDispatch)\n\n  return (\n    <div className=\"\">\n      <Container id=\"images\">\n        <Row>\n          {imgData.images.map((image: any, index: number) => {\n            const { author, download_url } = image\n            return (\n              // eslint-disable-next-line react/no-array-index-key\n              <Card key={index} style={{ width: '18rem' }}>\n                <Card.Img\n                  alt={author}\n                  data-src={download_url}\n                  variant=\"top\"\n                  src=\"https://picsum.photos/id/870/300/300?grayscale&blur=2\"\n                  className=\"card-img-top\"\n                />\n                <Card.Body>\n                  <Card.Title>Card Title</Card.Title>\n                </Card.Body>\n                <Card.Footer>\n                  <small className=\"text-muted\">Shot by: {author}</small>\n                </Card.Footer>\n              </Card>\n            )\n          })}\n        </Row>\n      </Container>\n\n      {imgData.fetching && (\n        <div className=\"text-center bg-secondary m-auto p-3\">\n          <p className=\"m-0 text-white\">Getting images</p>\n        </div>\n      )}\n      <div\n        id=\"page-bottom-boundary\"\n        style={{ border: '1px solid red' }}\n        ref={bottomBoundaryRef}\n      />\n    </div>\n  )\n}\n\nexport default Home\n","import { useEffect, useCallback, useRef } from 'react'\n\ninterface payloadType {\n  page: number\n}\n// make API calls and pass the returned data via dispatch\nexport const useFetch = (payload: payloadType, dispatch: any): void => {\n  useEffect(() => {\n    dispatch({ type: 'FETCHING_IMAGES', fetching: true })\n    fetch(`https://picsum.photos/v2/list?page=${payload.page}&limit=10`)\n      .then((data) => data.json())\n      .then((images) => {\n        dispatch({ type: 'STACK_IMAGES', images })\n        dispatch({ type: 'FETCHING_IMAGES', fetching: false })\n      })\n      .catch((e) => {\n        // handle error\n        dispatch({ type: 'FETCHING_IMAGES', fetching: false })\n        return e\n      })\n  }, [dispatch, payload.page])\n}\n\n// infinite scrolling with intersection observer\nexport const useInfiniteScroll = (scrollRef: any, dispatch: any): void => {\n  const scrollObserver = useCallback(\n    (node) => {\n      new IntersectionObserver((entries) => {\n        entries.forEach((en) => {\n          if (en.intersectionRatio > 0) {\n            dispatch({ type: 'ADVANCE_PAGE' })\n          }\n        })\n      }).observe(node)\n    },\n    [dispatch]\n  )\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollObserver(scrollRef.current)\n    }\n  }, [scrollObserver, scrollRef])\n}\n\n// lazy load images with intersection observer\nexport const useLazyLoading = (imgSelector: string, items: any) => {\n  const imgObserver = useCallback((node) => {\n    const intObs = new IntersectionObserver((entries: any[]) => {\n      entries.forEach((en) => {\n        if (en.intersectionRatio > 0) {\n          const currentImg = en.target\n          const newImgSrc = currentImg.dataset.src\n\n          // only swap out the image source if the new url exists\n          if (!newImgSrc) {\n            console.error('Image source is invalid')\n          } else {\n            currentImg.src = newImgSrc\n          }\n          intObs.unobserve(node)\n        }\n      })\n    })\n    intObs.observe(node)\n  }, [])\n\n  const imagesRef = useRef<any | null>(null)\n\n  useEffect(() => {\n    imagesRef.current = document.querySelectorAll(imgSelector)\n\n    if (imagesRef.current) {\n      imagesRef.current.forEach((img: any) => imgObserver(img))\n    }\n  }, [imgObserver, imagesRef, imgSelector, items])\n}\n","import React from 'react'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface PublicPageProps {}\n\nconst PublicPage: React.FC<PublicPageProps> = () => {\n  return <div>This is PublicPage</div>\n}\n\nexport default PublicPage\n","import React from 'react'\nimport Button from 'react-bootstrap/Button'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport useAuth from '../auth/useAuth'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface LoginPageProps {}\n\nconst LoginPage: React.FC<LoginPageProps> = () => {\n  const history = useHistory()\n  const location = useLocation()\n  const auth = useAuth()\n\n  const { from } = (location.state as any) || { from: { pathname: '/' } }\n  const handleLogin = () => {\n    auth?.signIn(() => {\n      history.replace(from)\n    })\n  }\n  return (\n    <div>\n      <p>You must log in to view the page at {from.pathname}</p>\n      <Button onClick={handleLogin}>Login</Button>\n    </div>\n  )\n}\n\nexport default LoginPage\n","import React from 'react'\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom'\nimport NavComponent from './NavComponent'\nimport PrivateRoute from './auth/PrivateRoute'\nimport AuthProvider from './auth/AuthProvider'\nimport HomePage from './pages/HomePage'\nimport PublicPage from './pages/PublicPage'\nimport PrivatePage from './pages/PrivatePage'\nimport LoginPage from './pages/LoginPage'\nimport './App.scss'\n\nconst App = (): React.ReactElement => {\n  return (\n    <AuthProvider>\n      <BrowserRouter>\n        <div>\n          <NavComponent />\n\n          <ul>\n            <li>\n              <Link to=\"/public-page\">Public Page</Link>\n            </li>\n            <li>\n              <Link to=\"/home\">Home Page</Link>\n            </li>\n          </ul>\n          <Switch>\n            <Route path=\"/public-page\">\n              <PublicPage />\n            </Route>\n            <Route path=\"/login\">\n              <LoginPage />\n            </Route>\n            <PrivateRoute path=\"/home\">\n              <HomePage />\n            </PrivateRoute>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </AuthProvider>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}